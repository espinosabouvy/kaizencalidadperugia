{
    "collab_server" : "",
    "contents" : "---\noutput: html_document\nruntime: shiny\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n##Generar reporte semanal de calidad y produccion\n```{r lectura, echo=FALSE, message=FALSE, warning=FALSE}\nrequire(dplyr)\nrequire(lubridate)\nrequire(ggplot2)\nrequire(stringr)\nrequire(gridExtra)\n\ninputPanel(\n     fileInput(\"browse.reprocesos\", \"Selecciona archivo CSV que obtienes de indicadores/reprocesos\",\n                                                          accept = c(\n                                                               \"text/csv\",\n                                                               \"text/comma-separated-values,text/plain\",\n                                                               \".csv\")),\n     \n     fileInput(\"browse.lotes\", \"Selecciona archivo CSV que obtienes de indicadores/produccion/pares\",\n                                                          accept = c(\n                                                               \"text/csv\",\n                                                               \"text/comma-separated-values,text/plain\",\n                                                               \".csv\")),\n     uiOutput(\"departamentos\"),\n     uiOutput(\"semanas\")\n )\n\n     \n     #llenar combo de departamentos con el archivo preparado\n     output$departamentos  <- renderUI({\n          \n          datos <- leer.reprocesos()\n          if (is.null(datos)) return(NULL)\n          \n          deptos <- unique(datos$SUBDEPTO)\n          selectInput(\"depto.selected\", \"Selecciona departamento\", as.list(deptos), multiple = F)\n     })\n     \n     #llenar combo de semanas\n     output$semanas  <- renderUI({\n          datos <- leer.reprocesos()\n          if (is.null(datos)) return(NULL)\n          sems <- unique(datos$SEMANA)\n          selectInput(\"sems.selected\", \"Selecciona semana\", as.list(sems), \n                      selected = max(datos$SEMANA,1), multiple = F)\n     })\n     \n     #funcion para semanas de jueves a miercoles\n     dia.semana <- function(fecha){\n          #if(!is.Date(fecha)) return(\"Fecha sin formato correcto\")\n          num <- as.numeric(format(as.Date(fecha)+3, \"%U\"))\n          num <- ifelse(num<10, paste0(\"0\",num), num)\n          \n          return(paste0(year(fecha),\"-S\",num))\n     }\n     \n     #leer archivo de reprocesos, semanas completas\n     leer.reprocesos <- reactive({\n          \n          file.reprocesos <- NULL\n          file.reprocesos <- input$browse.reprocesos          \n          \n          if (is.null(file.reprocesos)) return(NULL)\n          repro <- file.reprocesos$datapath\n          #repro <- \"REPROCESOS_Detalle.csv\"\n          \n          #leer por tipo de archivo\n          reprocesos.raw <- read.csv(repro, \n                                     header = TRUE, na.strings = c(\"NA\",\"\"), stringsAsFactors = F)\n          #pisos a ensamble\n          if(nrow(reprocesos.raw[reprocesos.raw$depto_b == \"PISOS\",])>0){\n               reprocesos.raw[reprocesos.raw$depto_b == \"PISOS\",]$depto_b <- \"ENSAMBLE\"\n          }\n          \n          #corregir reprocesos\n          reprocesos.raw$fecha <- dmy_hms(reprocesos.raw$fecha)\n          reprocesos.raw$FECHA<- floor_date(reprocesos.raw$fecha, unit = \"day\")\n\n          reprocesos <- reprocesos.raw%>%\n               mutate(\"SEMANA\" = dia.semana(FECHA))%>%\n               select(FECHA, \"DEFECTO\" = descr, \"DEPARTAMENTO\" = depto_b, \"SUBDEPTO\" = subdepto, SEMANA)\n          \n     })\n     \n     #leer archivo de estilos producidos en la semana\n     leer.estilos <- reactive({\n          file.pares <- NULL\n          file.pares <- input$browse.lotes         \n          \n          if (is.null(file.pares)) return(NULL)\n          pares <- file.pares$datapath\n          #pares <- \"pares.csv\"\n          \n          #leer por tipo de archivo\n          pares.raw <- read.csv(pares, \n                                header = TRUE, na.strings = c(\"NA\",\"\"), stringsAsFactors = F)\n          \n          #corregir pares leidos\n          pares.raw$fproceso <- dmy(pares.raw$fproceso)\n          \n          #pisos a ensamble\n          if(nrow(pares.raw[pares.raw$subdepto == \"PISOS\",])>0){\n               pares.raw[pares.raw$subdepto == \"PISOS\",]$subdepto <- \"ENSAMBLE\"\n          }\n          \n          pares <<- pares.raw%>%\n               mutate(\"SEMANA\" = dia.semana(fproceso),\n                      \"SUBDEPTO\" = paste0(subdepto, qfabrica))%>%\n               select(\"ESTILO\" = vcestil, \"FECHA\" = fproceso, SUBDEPTO, \"DEPARTAMENTO\" = subdepto, \n                      \"PARES\" = pares, \"META\" = meta, SEMANA)\n          \n     })\n\n```\n\n<center><h4>Datos encontrados para generar reporte</h4></center>\nDepartamentos encontrados en reprocesos\n```{r repro-deptos, echo=FALSE}\n\nrenderTable({\n\n     datos <- leer.reprocesos()\n     if (is.null(datos)) return(NULL)\n\n     data.frame(\"Departamentos\" = unique(datos$DEPARTAMENTO))\n\n})\n\n```\n\n```{r repro-deptos-error, echo=FALSE}\n\nrenderPrint({\n\n     datos <- leer.reprocesos()\n     if (is.null(datos)) return(NULL)\n\n     if(nrow(datos%>%filter(DEPARTAMENTO == \"MONTADO\"))==0) {\n          return(cat(\"NO SE ENCONTRO DEPARTAMENTO DE MONTADO EN REPROCESOS, ALGUNAS GRAFICAS NO SERAN\n                     GENERADAS O PUEDEN CONTENER INFORMACION ERRONEA\"))\n     }\n})\n\n```\nDepartamentos encontrados en pares producidos\n```{r pares-deptos, echo=FALSE}\n\nrenderTable({\n\n     datos <- leer.estilos()\n     if (is.null(datos)) return(NULL)\n\n     data.frame(\"Departamentos\" = unique(datos$DEPARTAMENTO))\n\n})\n\n```\n\n```{r pares-deptos-error, echo=FALSE}\n\nrenderPrint({\n\n     datos <- leer.estilos()\n     if (is.null(datos)) return(NULL)\n\n     if(nrow(datos%>%filter(DEPARTAMENTO == \"MONTADO\"))==0) {\n          return(cat(\"NO SE ENCONTRO DEPARTAMENTO DE MONTADO EN PARES PRODUCIDOS, ALGUNAS GRAFICAS NO SERAN GENERADAS\"))\n     }\n})\n\n```\n\n<P style=\"page-break-before: always\">\n\n<style>\n  .col2 {\n    columns: 2 200px;         /* number of columns and width in pixels*/\n    -webkit-columns: 2 200px; /* chrome, safari */\n    -moz-columns: 2 200px;    /* firefox */\n  }\n  .col3 {\n    columns: 3 100px;\n    -webkit-columns: 3 100px;\n    -moz-columns: 3 100px;\n  }\n</style>\n<P style=\"page-break-before: always\">\n\n##Metodo de solucion de problemas y reprocesos\nNombre de quien realiza: __________________________________________    Fecha: __________________   \n  \n  Utiliza el diagrama de pescado para determinar las posibles causas de tus principales reprocesos, el diagrama de 5 porque para encontrar la causa raiz y define las actividades a realizar para mejorar\nElige la causa principal de tus reprocesos y llega a su causa raiz\n![\"Herramientas de mejora\"](data/all.png)\n<P style=\"page-break-before: always\">\n<center><h2>Indicadores de pares buenos a la primera</h2></center>\n```{r historico-general-repro, echo=FALSE}\n\nrenderPlot({\n                    \n     #grafico de reprocesos segun el subdepto\n     datos <- leer.reprocesos()\n     if (is.null(datos)) return(NULL)\n     pares <- leer.estilos()\n     if (is.null(pares)) return(NULL)\n\n     reprocesos.por.semana <- datos%>%\n          group_by(SEMANA)%>%\n          summarise(\"REPROCESOS\" = n())\n\n     produccion.por.semana <- pares%>%\n          group_by(SEMANA, DEPARTAMENTO)%>%\n          summarise(\"PARES\" = sum(PARES))%>%\n          filter(DEPARTAMENTO == \"MONTADO\")%>%\n          select(SEMANA, PARES)\n     \n     if(nrow(produccion.por.semana)==0) return(\"No se encontro informacion de montado\")\n\n     result <- merge(reprocesos.por.semana, produccion.por.semana, by = c(\"SEMANA\"), all = T)%>%\n          mutate(\"PARES.SIN.REPROCESO\" = ceiling((1-(REPROCESOS/PARES))*100))%>%\n          select(SEMANA, PARES.SIN.REPROCESO)\n\n     result <- result[complete.cases(result),]\n\n     #reprocesos\n     p1 <- ggplot(result) +\n          geom_hline(yintercept = 98, col = \"green4\") +\n          geom_hline(yintercept = 95, col = \"gold3\") +\n          geom_line(aes(SEMANA, PARES.SIN.REPROCESO, group = '1'), col = \"blue\")+\n          geom_text(aes(SEMANA, PARES.SIN.REPROCESO,\n                        label = paste(PARES.SIN.REPROCESO,\"%\")), vjust = 2) +\n          ggtitle(\"Indicador general de pares buenos a la primera\")+\n          scale_y_continuous(limits = c(min(result$PARES.SIN.REPROCESO)-10, 100))\n\n\n     reprocesos.por.semana <- datos%>%\n          group_by(SEMANA, DEPARTAMENTO)%>%\n          summarise(\"REPROCESOS\" = n())\n\n     produccion.por.semana <- pares%>%\n          group_by(SEMANA, DEPARTAMENTO)%>%\n          summarise(\"PARES\" = sum(PARES),\n                    \"META\" = sum(META))\n\n     result <- merge(reprocesos.por.semana, produccion.por.semana, by = c(\"SEMANA\",\"DEPARTAMENTO\"), all = T)%>%\n          mutate(\"PARES.SIN.REPROCESO\" = ceiling((1-(REPROCESOS/PARES))*100),\n                 \"CUMPLIMIENTO\" = ceiling(PARES/META*100))%>%\n          select(SEMANA, DEPARTAMENTO, PARES.SIN.REPROCESO)\n\n     result <- result[complete.cases(result),]\n\n     #reprocesos\n     p2 <- ggplot(result) +\n          geom_hline(yintercept = 98, col = \"green4\")+\n          geom_hline(yintercept = 95, col = \"gold3\") +\n          geom_line(aes(SEMANA, PARES.SIN.REPROCESO, colour = DEPARTAMENTO, group = DEPARTAMENTO))+\n          geom_text(aes(SEMANA, PARES.SIN.REPROCESO, colour = DEPARTAMENTO, group = DEPARTAMENTO,\n                        label = paste(PARES.SIN.REPROCESO,\"%\")), vjust = 2) +\n          ggtitle(\"Pares buenos a la primera por departamento\") +\n          scale_y_continuous(limits = c(min(result$PARES.SIN.REPROCESO)-10, 100))\n\n     grid.arrange(p1,p2, ncol = 2)\n\n})\n\n```\n\n<center><h4>Cumplimiento de metas de produccion</h4></center>\n```{r historico-deptos-metas, echo=FALSE, fig.height=15}\n\nrenderPlot({\n                    \n     #grafico de reprocesos segun el subdepto\n     pares <- leer.estilos()\n     if (is.null(pares)) return(NULL)\n\n     \n     result <- pares%>%\n          group_by(FECHA, SEMANA, SUBDEPTO, DEPARTAMENTO)%>%\n          summarise(\"PARES.DIA\" = sum(PARES), \n                    \"META.DIA\" = mean(META))%>%\n          group_by(SEMANA, DEPARTAMENTO)%>%\n          summarise(\"PARES.SEMANA\" = sum(PARES.DIA),\n                    \"META.SEMANA\" = sum(META.DIA))%>%\n          mutate(\"CUMPLIMIENTO\" = ceiling(PARES.SEMANA/META.SEMANA*100))\n\n     result <- result[complete.cases(result),]\n     \n     #metas\n     ggplot(result) +\n          geom_hline(yintercept = 98, col = \"green4\")+\n          geom_hline(yintercept = 95, col = \"gold3\") +\n          geom_line(aes(SEMANA, CUMPLIMIENTO, colour = DEPARTAMENTO, group = DEPARTAMENTO))+\n          facet_grid(DEPARTAMENTO~., scales = \"free\") +\n          geom_text(aes(SEMANA, CUMPLIMIENTO, colour = DEPARTAMENTO, group = DEPARTAMENTO,\n                        label = paste(CUMPLIMIENTO,\"%\")), vjust = 0) +\n          theme(legend.position=\"none\")\n       \n}, height = 600)\n\n```\n<P style=\"page-break-before: always\">\n<center> <h2>Reporte semanal de calidad y produccion</h2> </center>\n\n<center> <h3>Semana:  `r renderText({ input$sems.selected })` - Departamento: `r renderText({ input$depto.selected })` </h3> </center>   \n\n<center>\n###Cumplimiento de meta semanal **`r renderText({\n                    \n                    pares <- leer.estilos()\n                    if (is.null(pares)) return(NULL)\n                    \n                    semana.sel <- input$sems.selected\n                    if(is.null(semana.sel)) return(NULL)\n                    \n                    depto.sel <- input$depto.selected\n                    if (is.null(depto.sel)) return(NULL)\n                    \n                    meta.total <- pares%>%\n                         group_by(SUBDEPTO, FECHA)%>%\n                         summarise(\"META.SEMANA\" = sum(PARES))\n                    \n                    prod.pares <- pares%>%\n                         filter(SUBDEPTO %in% depto.sel & SEMANA %in% semana.sel)%>%\n                         group_by(FECHA)%>%\n                         summarise(\"PARES\"  = sum(PARES),\n                                   \"META\" = mean(META))%>%\n                         ungroup()%>%\n                         summarise(\"TOT.PARES\" = sum(PARES),\n                                   \"TOT.META\" = sum(META))%>%\n                         mutate(\"cumple\" = TOT.PARES/TOT.META)\n                    \n                    cumplimiento <- paste0(as.numeric(ceiling(prod.pares$cumple*100)),\"%\")\n                    \n                    })`** {#foo}  \n                    \n###Pares buenos a la primera  **`r renderText({\n                    reprocesos <- leer.reprocesos()\n                    if (is.null(reprocesos)) return(NULL)\n                    pares <- leer.estilos()\n                    if (is.null(pares)) return(NULL)\n                    \n                    semana.sel <- input$sems.selected\n                    if(is.null(semana.sel)) return(NULL)\n                    \n                    depto.sel <- input$depto.selected\n                    if (is.null(depto.sel)) return(NULL)\n                    \n                    total.reprocesos <- reprocesos%>%\n                         filter(SUBDEPTO %in% depto.sel & SEMANA %in% semana.sel)%>%\n                         summarise(\"TOTAL\" = n())\n                    \n                    total.pares <- pares%>%\n                         filter(SUBDEPTO %in% depto.sel & SEMANA %in% semana.sel)%>%\n                         summarise(\"PARES\"  = sum(PARES))\n                    \n                    a.primera <- paste0(as.numeric(ceiling((1-(total.reprocesos/total.pares))*100)),\"%\")\n                    \n                    return(a.primera)\n               })`**  {#foo}  \n\n</center>\n```{r reprocesos-acumulado, echo=FALSE}\n\nrenderPlot({\n     \n     #grafico de reprocesos segun el subdepto\n     datos <- leer.reprocesos()\n     if (is.null(datos)) return(NULL)\n     pares <- leer.estilos()\n     if (is.null(pares)) return(NULL)\n     semana.sel <- input$sems.selected\n     if(is.null(semana.sel)) return(NULL)\n     depto.sel <- input$depto.selected\n     if (is.null(depto.sel)) return(NULL)\n     \n     result <- datos%>%\n          filter(SUBDEPTO %in% depto.sel & SEMANA %in% semana.sel)%>%\n          group_by(DEFECTO)%>%\n          summarise(\"TOTAL\" = n())%>%\n          arrange(desc(TOTAL))%>%\n          mutate(\"acum\"= cumsum(TOTAL),\n                 \"PCT.ACUM\" = ceiling(acum/max(acum)*100))%>%\n          select(DEFECTO, TOTAL, PCT.ACUM)\n     \n     #formato al nombre del defecto\n     result$DEFECTO <- str_wrap(result$DEFECTO, width = 10) \n     \n     if (nrow(result) ==0) return(NULL)\n     \n     p1 <- ggplot(result) +\n          geom_bar(aes(reorder(DEFECTO, -TOTAL), TOTAL), fill = 'steelblue3', stat = 'identity') +\n          geom_line(aes(reorder(DEFECTO, -TOTAL), PCT.ACUM, group = '1'), colour = 'deeppink4') +\n          xlab(\"Defectos\") +\n          ylab(\"Cuenta\") +\n          geom_text(aes(reorder(DEFECTO, -TOTAL), PCT.ACUM,\n                        label = paste(PCT.ACUM,\"%\"), group = '1'), vjust = 2) +\n          geom_text(aes(reorder(DEFECTO, -TOTAL), TOTAL,\n                        label = paste(TOTAL), group = '1'), vjust = 0) +\n          geom_point(aes(reorder(DEFECTO, -TOTAL), PCT.ACUM, group = '1'), colour = 'deeppink4') +\n          theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +\n          ggtitle(\"Acumulado semanal de defectos\")\n     \n     #historico de buenos a la primera\n      reprocesos.por.semana <- datos%>%\n          filter(SUBDEPTO %in% depto.sel)%>%\n          group_by(SEMANA)%>%\n          summarise(\"REPROCESOS\" = n())\n\n     produccion.por.semana <- pares%>%\n          filter(SUBDEPTO %in% depto.sel)%>%\n          group_by(SEMANA)%>%\n          summarise(\"PARES\" = sum(PARES))\n     \n     result <- merge(reprocesos.por.semana, produccion.por.semana, by = \"SEMANA\", all = T)%>%\n          mutate(\"PARES.SIN.REPROCESO\" = ceiling((1-(REPROCESOS/PARES))*100))%>%\n          select(SEMANA, PARES.SIN.REPROCESO)\n     \n     result <- result[complete.cases(result),]\n     \n     #historico de reprocesos\n     p2 <- ggplot(result) +\n                    geom_hline(yintercept = 98, col = \"green4\")+\n          geom_hline(yintercept = 95, col = \"gold3\") +\n          geom_line(aes(SEMANA, PARES.SIN.REPROCESO, group = '1')) +\n          geom_text(aes(SEMANA, PARES.SIN.REPROCESO, group = '1',\n                        label = paste(PARES.SIN.REPROCESO,\"%\")), vjust = 2) +\n          ggtitle(\"Historial de pares buenos a la primera\") + \n          scale_y_continuous(limits = c(min(result$PARES.SIN.REPROCESO)-10, 100))\n          \n     grid.arrange(p1,p2, ncol = 2)\n     \n})\n\n```\n\n```{r reprocesos-por.dia, echo=FALSE}\n\nrenderPlot({\n                    \n     #grafico de reprocesos segun el subdepto\n     datos <- leer.reprocesos()\n     if (is.null(datos)) return(NULL)\n     semana.sel <- input$sems.selected\n     if(is.null(semana.sel)) return(NULL)\n     depto.sel <- input$depto.selected\n     if (is.null(depto.sel)) return(NULL)\n     \n     datos$DIA <- weekdays(datos$FECHA)\n     result <- datos%>%\n          filter(SUBDEPTO %in% depto.sel & SEMANA %in% semana.sel)%>%\n          group_by(FECHA, DIA, DEFECTO)%>%\n          summarise(\"TOTAL\" = n())%>%\n          arrange(FECHA)%>%\n          select(FECHA, DIA, DEFECTO, TOTAL)\n     \n     #formato al nombre del defecto\n     result$DEFECTO <- str_wrap(result$DEFECTO, width = 10)\n     \n     if (nrow(result) ==0) return(NULL)\n     \n     ggplot(result) +\n          geom_bar(aes(DEFECTO, TOTAL), fill = 'steelblue1', stat = 'identity') + \n          xlab(\"Defectos\") + \n          ylab(\"Cuenta\") +\n          geom_text(aes(DEFECTO, TOTAL,\n                        label = paste(TOTAL), group = '1'), vjust = 0.5) +\n          facet_grid(FECHA~.)+\n          theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n          ggtitle(\"Tabla de defectos diarios\")\n     \n}, height = 500)\n\n```\n\n\n<P style=\"page-break-before: always\">\n<center> <h2>Kaizen semanal de calidad</h2> </center>\n<center> <h3>Semana:  `r renderText({ input$sems.selected })` - Departamento: `r renderText({ input$depto.selected })` </h3> </center>\n```{r kaizen-reprocesos-pares, echo=FALSE}\n\nrenderPlot({\n     \n     #grafico de reprocesos segun el subdepto\n     datos <- leer.reprocesos()\n     if (is.null(datos)) return(NULL)\n     pares <- leer.estilos()\n     if (is.null(pares)) return(NULL)\n     semana.sel <- input$sems.selected\n     if(is.null(semana.sel)) return(NULL)\n     depto.sel <- input$depto.selected\n     if (is.null(depto.sel)) return(NULL) \n     \n     #historico de buenos a la primera\n      reprocesos.por.semana <- datos%>%\n          filter(SUBDEPTO %in% depto.sel)%>%\n          group_by(SEMANA)%>%\n          summarise(\"REPROCESOS\" = n())\n\n     produccion.por.semana <- pares%>%\n          filter(SUBDEPTO %in% depto.sel)%>%\n          group_by(SEMANA)%>%\n          summarise(\"PARES\" = sum(PARES))\n     \n     result <- merge(reprocesos.por.semana, produccion.por.semana, by = \"SEMANA\", all = T)%>%\n          mutate(\"PARES.SIN.REPROCESO\" = ceiling((1-(REPROCESOS/PARES))*100))%>%\n          select(SEMANA, PARES.SIN.REPROCESO)\n     \n     result <- result[complete.cases(result),]\n     \n     #historico de reprocesos\n     p1 <- ggplot(result) +\n          geom_hline(yintercept = 98, col = \"green4\")+\n          geom_hline(yintercept = 95, col = \"gold3\") +\n          geom_line(aes(SEMANA, PARES.SIN.REPROCESO, group = '1'), col = \"blue\") +\n          geom_text(aes(SEMANA, PARES.SIN.REPROCESO, group = '1',\n                        label = paste(PARES.SIN.REPROCESO,\"%\")), vjust = 2) +\n          ggtitle(\"Pares buenos a la primera\") + \n          scale_y_continuous(limits = c(min(result$PARES.SIN.REPROCESO)-10, 100))\n     \n     \n     \n     #historico de cumplimiento de metas\n     meta.total <- pares%>%\n                         group_by(SUBDEPTO, FECHA)%>%\n                         summarise(\"META.SEMANA\" = sum(PARES))\n                    \n     prod.pares <- pares%>%\n          filter(SUBDEPTO %in% depto.sel)%>%\n          group_by(FECHA,SEMANA)%>%\n          summarise(\"PARES\"  = sum(PARES),\n                    \"META\" = mean(META))%>%\n          ungroup()%>%\n          group_by(SEMANA)%>%\n          summarise(\"TOT.PARES\" = sum(PARES),\n                    \"TOT.META\" = sum(META))%>%\n          mutate(\"CUMPLIMIENTO.META\" = ceiling(TOT.PARES/TOT.META*100))\n                    \n     p2 <- ggplot(prod.pares) + \n          geom_hline(yintercept = 100, col = \"green4\") +\n          geom_hline(yintercept = 95, col = \"gold3\") +\n          geom_line(aes(SEMANA, CUMPLIMIENTO.META, group = '1'), col = \"blue\") +\n          geom_text(aes(SEMANA, CUMPLIMIENTO.META, group = '1',\n                        label = paste(CUMPLIMIENTO.META,\"%\")), vjust = 2) +\n          ggtitle(\"Cumplimiento de metas\") + \n          scale_y_continuous(limits = c(min(prod.pares$CUMPLIMIENTO.META)-10,\n                                        max(prod.pares$CUMPLIMIENTO.META)+10))          \n     \n     grid.arrange(p1, p2, ncol = 2)\n\n}, height = 200)\n     \n```\n```{r kaizen-reprocesos-acumulado, echo=FALSE, fig.height=4}\n\nrenderPlot({\n\n     #grafico de reprocesos segun el subdepto\n     datos <- leer.reprocesos()\n     if (is.null(datos)) return(NULL)\n     pares <- leer.estilos()\n     if (is.null(pares)) return(NULL)\n     semana.sel <- input$sems.selected\n     if(is.null(semana.sel)) return(NULL)\n     depto.sel <- input$depto.selected\n     if (is.null(depto.sel)) return(NULL)\n     \n     result <- datos%>%\n          filter(SUBDEPTO %in% depto.sel & SEMANA %in% semana.sel)%>%\n          group_by(DEFECTO)%>%\n          summarise(\"TOTAL\" = n())%>%\n          arrange(desc(TOTAL))%>%\n          mutate(\"acum\"= cumsum(TOTAL),\n                 \"PCT.ACUM\" = ceiling(acum/max(acum)*100))%>%\n          select(DEFECTO, TOTAL, PCT.ACUM)\n     \n     #formato al nombre del defecto\n     result$DEFECTO <- str_wrap(result$DEFECTO, width = 10) \n     \n     if (nrow(result) ==0) return(NULL)\n     \n     p1 <- ggplot(result) +\n          geom_bar(aes(reorder(DEFECTO, -TOTAL), TOTAL), fill = 'steelblue3', stat = 'identity') +\n          geom_line(aes(reorder(DEFECTO, -TOTAL), PCT.ACUM, group = '1'), colour = 'deeppink4') +\n          xlab(\"Defectos\") +\n          ylab(\"Cuenta\") +\n          geom_text(aes(reorder(DEFECTO, -TOTAL), PCT.ACUM,\n                        label = paste(PCT.ACUM,\"%\"), group = '1'), vjust = 2) +\n          geom_text(aes(reorder(DEFECTO, -TOTAL), TOTAL,\n                        label = paste(TOTAL), group = '1'), vjust = 0) +\n          geom_point(aes(reorder(DEFECTO, -TOTAL), PCT.ACUM, group = '1'), colour = 'deeppink4') +\n          theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 8)) +\n          ggtitle(\"Acumulado semanal de defectos\")\n     \n     #reprocesos leidos por dia\n     datos$DIA <- weekdays(datos$FECHA)\n     result <- datos%>%\n          filter(SUBDEPTO %in% depto.sel & SEMANA %in% semana.sel)%>%\n          group_by(FECHA, DIA, DEFECTO)%>%\n          summarise(\"TOTAL\" = n())%>%\n          arrange(FECHA)%>%\n          select(FECHA, DIA, DEFECTO, TOTAL)\n     \n     #formato al nombre del defecto\n     result$DEFECTO <- str_wrap(result$DEFECTO, width = 10)\n     \n     if (nrow(result) ==0) return(NULL)\n     \n     p2<- ggplot(result) +\n          geom_bar(aes(DEFECTO, TOTAL), fill = 'steelblue1', stat = 'identity') + \n          xlab(\"Defectos\") + \n          ylab(\"Cuenta\") +\n          geom_text(aes(DEFECTO, TOTAL,\n                        label = paste(TOTAL), group = '1'), vjust = 0.5) +\n          facet_grid(FECHA~.)+\n          theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 8)) + \n          ggtitle(\"Defectos por dia\")\n     \n          \n     grid.arrange(p1,p2, ncol = 2)\n})\n     \n```\n```{r kaizen-estilos-produccion, echo=FALSE, message=FALSE, warning=FALSE}\n\nrequire(tidyr)\n\nrenderPlot({\n     pares <- leer.estilos()\n     if (is.null(pares)) return(NULL)\n     depto.sel <- input$depto.selected\n     if (is.null(depto.sel)) return(NULL) \n     semana.sel <- input$sems.selected\n     if(is.null(semana.sel)) return(NULL)\n     \n     #historico de cumplimiento de metas\n     meta.total <- pares%>%\n                         group_by(SUBDEPTO, FECHA)%>%\n                         summarise(\"META.SEMANA\" = sum(PARES))\n                    \n     prod.pares <- pares%>%\n          filter(SUBDEPTO %in% depto.sel & SEMANA %in% semana.sel)%>%\n          group_by(FECHA, ESTILO)%>%\n          summarise(\"PARES\"= sum(PARES))\n     \n     ggplot(prod.pares) + \n          geom_point(aes(factor(ESTILO), PARES), size = 2) + \n          geom_text(aes(factor(ESTILO), PARES, group = '1',\n                        label = paste(PARES)), vjust = -0.5) +\n          facet_grid(FECHA~.) +\n          ggtitle(\"Estilos producidos en la semana\") + \n          xlab(\"Estilos\")+\n          scale_y_continuous(limits = c(0, max(prod.pares$PARES)+100))\n}, height = 400)\n\n```\n<P style=\"page-break-before: always\">\n",
    "created" : 1491316224493.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3458729103",
    "id" : "3168F668",
    "lastKnownWriteTime" : 1492615473,
    "last_content_update" : -2147483648,
    "path" : "~/Perugia/calidad/KaizenCalidad/KaizenCalidadv2.Rmd",
    "project_path" : "KaizenCalidadv2.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}